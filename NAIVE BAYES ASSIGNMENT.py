# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13YpJNXhd1RPctQDclU-Z0VvBcZmO8mzc
"""

#Rayyan's WORK
from google.colab import drive
drive.mount('/content/drive')
#Libraries 
import pandas as panda
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB

train=panda.read_csv('/content/drive/MyDrive/train.csv')

y = train.Cover_Type

X = train.drop('Cover_Type', axis=1)

#dividing Data Into 80%(Train) And 20%(test)
t_train, t_test, y_train, y_test = train_test_split(X, y,test_size=0.2)

#Faiq's WORK
#No Smoothing 
clf = MultinomialNB(alpha=0)
clf.fit(abs(t_train),y_train)
clf.predict(t_test)
NoMNB=clf.score(t_test,y_test)
print("Accuracy of NoMNB",NoMNB*100)


#Laplace Smoothing
clf = MultinomialNB(alpha=1)
clf.fit(abs(t_train),y_train)
clf.fit(abs(t_train),y_train)
clf.predict(t_test)
LPMNB=clf.score(t_test,y_test)
print("Accuracy Of LPMNB",LPMNB*100)

#Lidstone  Smoothing 
clf = MultinomialNB(alpha=0.5)
clf.fit(abs(t_train),y_train)
clf.fit(abs(t_train),y_train)
clf.predict(t_test)
LDMNB=clf.score(t_test,y_test)
print("Accuracy Of LDMNB",LDMNB*100)


#Rayyan's WORK

#Loading Training Data From Drive
test=panda.read_csv('/content/drive/MyDrive/test.csv')
test.head()


#Using No Smoothing For Data Fiting,Predicting,And Scoring Accuracy As it's Accuracy Was Good From Others
clf = MultinomialNB(alpha=0)
clf.fit(abs(t_train),y_train)
Cover_type=clf.predict(test)
print("Predicted Values: ",Cover_type)

#Rayyan's WORK
#Exporting The Two Colomns(Id And Cover_Type) Into exported colomn Csv
exported_col = test[['Id']].copy()
exported_col['Cover_Type'] = Cover_type
print(exported_col)


"Creating Our Csv File With That Two Exported Columns For Submission On Kaggle"
exported_col.to_csv('exported_col.csv',index=False)